name: Build SDKs
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
env:
  solana_version: v1.18.8

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - name: install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          npm install --global yarn

      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.82.0

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ env.solana_version }}/install)"
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

  lint:
    needs: install
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust/

    steps:
      - uses: actions/checkout@v4
      - name: Run fmt
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- --deny=warnings

  build:
    needs: [install, lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        name: cache solana cli
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - name: setup solana
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana-keygen new --silent --no-bip39-passphrase

      - name: run build
        working-directory: rust/
        run: |
          cargo build

      - name: npm run build
        working-directory: ts/
        run: |
          npm install --global eslint@^8.33.0
          npm install --legacy-peer-deps
          npm run build